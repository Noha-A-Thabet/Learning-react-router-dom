{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\Akram Bootcamp\\\\React Course\\\\Eighteen Project\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, Outlet, RouterProvider } from 'react-router-dom';\nimport Homepage from './pages/Homepage';\nimport EventDetail from './pages/EventDetail';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\nimport Event from './pages/Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(Event, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }, this)\n  }, {\n    path: '/events/:eventId',\n    element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 42\n    }, this)\n  }, {\n    path: '/events/new',\n    element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }, this)\n  }, {\n    path: '/events/:eventId/edit',\n    element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 47\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","Outlet","RouterProvider","Homepage","EventDetail","NewEvent","EditEvent","Event","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/Akram Bootcamp/React Course/Eighteen Project/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, Outlet, RouterProvider } from 'react-router-dom'\nimport Homepage from './pages/Homepage';\nimport EventDetail from './pages/EventDetail';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\nimport Event from './pages/Event';\n\n\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: '/',\n      element: <Homepage />,\n    },\n    { path: '/events', element: <Event /> },\n    { path: '/events/:eventId', element: <EventDetail /> },\n    { path: '/events/new', element: <NewEvent /> },\n    { path: '/events/:eventId/edit', element: <EditEvent /> }\n\n  ]\n  )\n  return <RouterProvider router={router} />\n\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,MAAM,EAAEC,cAAc,QAAQ,kBAAkB;AAC9E,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;IACEY,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACN,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACtB,CAAC,EACD;IAAEL,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAEJ,OAAA,CAACF,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACvC;IAAEL,IAAI,EAAE,kBAAkB;IAAEC,OAAO,eAAEJ,OAAA,CAACL,WAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACtD;IAAEL,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAEJ,OAAA,CAACJ,QAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC9C;IAAEL,IAAI,EAAE,uBAAuB;IAAEC,OAAO,eAAEJ,OAAA,CAACH,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,CAG3D,CAAC;EACD,oBAAOR,OAAA,CAACP,cAAc;IAACS,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE3C;AAACC,EAAA,GAfQR,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}